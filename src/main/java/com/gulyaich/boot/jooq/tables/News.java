/*
 * This file is generated by jOOQ.
 */
package com.gulyaich.boot.jooq.tables;


import com.gulyaich.boot.jooq.Indexes;
import com.gulyaich.boot.jooq.Keys;
import com.gulyaich.boot.jooq.Public;
import com.gulyaich.boot.jooq.tables.records.NewsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Таблица студентов
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class News extends TableImpl<NewsRecord> {

    private static final long serialVersionUID = 2106777385;

    /**
     * The reference instance of <code>PUBLIC.NEWS</code>
     */
    public static final News NEWS = new News();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewsRecord> getRecordType() {
        return NewsRecord.class;
    }

    /**
     * The column <code>PUBLIC.NEWS.NEWS_ID</code>.
     */
    public final TableField<NewsRecord, Long> NEWS_ID = createField("NEWS_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.NEWS.TITLE</code>. Заголовок новости
     */
    public final TableField<NewsRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "Заголовок новости");

    /**
     * The column <code>PUBLIC.NEWS.BODY</code>. Текст новости
     */
    public final TableField<NewsRecord, String> BODY = createField("BODY", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false), this, "Текст новости");

    /**
     * The column <code>PUBLIC.NEWS.DATE</code>. Дата новости
     */
    public final TableField<NewsRecord, Timestamp> DATE = createField("DATE", org.jooq.impl.SQLDataType.TIMESTAMP.precision(6).nullable(false), this, "Дата новости");

    /**
     * Create a <code>PUBLIC.NEWS</code> table reference
     */
    public News() {
        this(DSL.name("NEWS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.NEWS</code> table reference
     */
    public News(String alias) {
        this(DSL.name(alias), NEWS);
    }

    /**
     * Create an aliased <code>PUBLIC.NEWS</code> table reference
     */
    public News(Name alias) {
        this(alias, NEWS);
    }

    private News(Name alias, Table<NewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private News(Name alias, Table<NewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Таблица студентов"));
    }

    public <O extends Record> News(Table<O> child, ForeignKey<O, NewsRecord> key) {
        super(child, key, NEWS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewsRecord>> getKeys() {
        return Arrays.<UniqueKey<NewsRecord>>asList(Keys.CONSTRAINT_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public News as(String alias) {
        return new News(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public News as(Name alias) {
        return new News(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public News rename(String name) {
        return new News(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public News rename(Name name) {
        return new News(name, null);
    }
}
